security:
    encoders:
        Me\VendangesBundle\Entity\Vendangeur:
            algorithm: sha512
        Me\VendangesBundle\Entity\Vigneron:
            algorithm: sha512

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
#        chain_provider:
#            chain:
#                providers: [vendangeurs, vignerons]
        vendangeurs:
            entity: { class: MeVendangesBundle:Vendangeur, property: email }
        vignerons:
            entity: { class: MeVendangesBundle:Vigneron, property: email }
#        in_memory:
#            memory:
#                users:
#                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
#                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

    firewalls:
        vendangeurs_secured_area:
            pattern:    ^/vendangeurs
            provider: vendangeurs
            anonymous: ~
            form_login:
                login_path: vendangeurs_connexion
                check_path: vendangeurs_verification
                use_referer: true
            logout:
                path:    vendangeurs_deconnexion
                target:  vendanges_homepage

        vignerons_secured_area:
            pattern:    ^/vignerons
            provider: vignerons
            anonymous: ~
            form_login:
                login_path: vignerons_connexion
                check_path: vignerons_verification
                use_referer: true
            logout:
                path:    vignerons_deconnexion
                target:  vendanges_homepage

    access_control:
        - { path: ^/vendangeurs/annonces, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/vendangeurs/connexion, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/vignerons/connexion, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/vendangeurs/inscription, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/vignerons/inscription, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/vendangeurs/nouveau-motdepasse, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/vignerons/nouveau-motdepasse, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/vendangeurs/domaines, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/vendangeurs/domaines/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/vendangeurs/, roles: ROLE_VENDANGEUR }
        - { path: ^/vignerons/, roles: ROLE_VIGNERON }

############## Code from demo ###############
#    firewalls:
#        dev:
#            pattern:  ^/(_(profiler|wdt)|css|images|js)/
#            security: false

#        demo_login:
#            pattern:  ^/demo/secured/login$
#            security: false

#        demo_secured_area:
#            pattern:    ^/demo/secured/
#            form_login:
#                check_path: _demo_security_check
#                login_path: _demo_login
#            logout:
#                path:   _demo_logout
#                target: _demo
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

#    access_control:
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }